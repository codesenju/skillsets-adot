{
 "Resources": {
  "skillsetssg924C52BD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "skillsetsStack/skillsets_sg",
    "GroupName": "skillsets_sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow outbound traffic HTTPS to the world",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": "vpc-0f168d381ce65cfb5"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsets_sg/Resource"
   }
  },
  "skillsetssgfromskillsetsStackimportedelbSG5487E6BF50006D4ADC60": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Allow inbound traffic from ELB.",
    "FromPort": 5000,
    "GroupId": {
     "Fn::GetAtt": [
      "skillsetssg924C52BD",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::ImportValue": "elbSGID"
    },
    "ToPort": 5000
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsets_sg/from skillsetsStackimportedelbSG5487E6BF:5000"
   }
  },
  "skillsetssgtoskillsetsStackredisefsSGID1BDCB913204977F4344F": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "skillsetssg924C52BD",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Allow outbond traffic  to EFS on port 2049",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "redisefsSGIDBA5F5E82",
      "GroupId"
     ]
    },
    "FromPort": 2049,
    "ToPort": 2049
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsets_sg/to skillsetsStackredisefsSGID1BDCB913:2049"
   }
  },
  "redisefsSGIDBA5F5E82": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "skillsetsStack/redis_efs_SGID",
    "GroupName": "redis_efs_SGID",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow inbound  traffic NFS from vpc cidr block.",
      "FromPort": 2049,
      "IpProtocol": "tcp",
      "ToPort": 2049
     }
    ],
    "VpcId": "vpc-0f168d381ce65cfb5"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/redis_efs_SGID/Resource"
   }
  },
  "importedelbSGfrom000008011DCB00D": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "CidrIp": "0.0.0.0/0",
    "Description": "Allow from anyone on port 80",
    "FromPort": 80,
    "GroupId": {
     "Fn::ImportValue": "elbSGID"
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/importedelbSG/from 0.0.0.0_0:80"
   }
  },
  "ImportedTaskExecutionRolePolicy23E279F9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "skillsetsLogGroup9C1E032F",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ImportedTaskExecutionRolePolicy23E279F9",
    "Roles": [
     "ecsTaskExecutionRole"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/ImportedTaskExecutionRole/Policy/Resource"
   }
  },
  "ImportedEcsExecTaskRolePolicy6CAEEF74": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "logs:DescribeLogGroups",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ImportedEcsExecTaskRolePolicy6CAEEF74",
    "Roles": [
     "000A_ecsExecTaskRole"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/ImportedEcsExecTaskRole/Policy/Resource"
   }
  },
  "redisEFSFileSystemD702FC13": {
   "Type": "AWS::EFS::FileSystem",
   "Properties": {
    "Encrypted": true,
    "FileSystemTags": [
     {
      "Key": "Name",
      "Value": "skillsetsStack/redis_EFSFileSystem"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/redis_EFSFileSystem/Resource"
   }
  },
  "redisEFSFileSystemEfsMountTarget17BB429D5": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "redisEFSFileSystemD702FC13"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "redisefsSGIDBA5F5E82",
       "GroupId"
      ]
     }
    ],
    "SubnetId": "subnet-01b1911df0ad91eb7"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/redis_EFSFileSystem/EfsMountTarget1"
   }
  },
  "redisEFSFileSystemEfsMountTarget2C70454BD": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "redisEFSFileSystemD702FC13"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "redisefsSGIDBA5F5E82",
       "GroupId"
      ]
     }
    ],
    "SubnetId": "subnet-02ae900ec00be7b2f"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/redis_EFSFileSystem/EfsMountTarget2"
   }
  },
  "redisEFSFileSystemEfsMountTarget38E95AEAE": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "redisEFSFileSystemD702FC13"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "redisefsSGIDBA5F5E82",
       "GroupId"
      ]
     }
    ],
    "SubnetId": "subnet-08d2609ae2ad75bcc"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/redis_EFSFileSystem/EfsMountTarget3"
   }
  },
  "redisBFFF3E2F": {
   "Type": "AWS::AppMesh::VirtualNode",
   "Properties": {
    "MeshName": {
     "Fn::Select": [
      1,
      {
       "Fn::Split": [
        "/",
        {
         "Fn::Select": [
          5,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::ImportValue": "EcsApiMeshArn"
            }
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "Spec": {
     "Listeners": [
      {
       "PortMapping": {
        "Port": 8080,
        "Protocol": "tcp"
       }
      }
     ],
     "Logging": {
      "AccessLog": {
       "File": {
        "Path": "/dev/stdout"
       }
      }
     },
     "ServiceDiscovery": {
      "DNS": {
       "Hostname": "redis.api.local"
      }
     }
    },
    "MeshOwner": {
     "Fn::Select": [
      4,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::ImportValue": "EcsApiMeshArn"
        }
       ]
      }
     ]
    },
    "VirtualNodeName": "redis-node"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/redis/Resource"
   }
  },
  "redisVirtualService67101F30": {
   "Type": "AWS::AppMesh::VirtualService",
   "Properties": {
    "MeshName": {
     "Fn::Select": [
      1,
      {
       "Fn::Split": [
        "/",
        {
         "Fn::Select": [
          5,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::ImportValue": "EcsApiMeshArn"
            }
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "Spec": {
     "Provider": {
      "VirtualNode": {
       "VirtualNodeName": {
        "Fn::GetAtt": [
         "redisBFFF3E2F",
         "VirtualNodeName"
        ]
       }
      }
     }
    },
    "VirtualServiceName": {
     "Fn::Join": [
      "",
      [
       "redis.",
       {
        "Fn::ImportValue": "ApiNamespaceName"
       }
      ]
     ]
    },
    "MeshOwner": {
     "Fn::Select": [
      4,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::ImportValue": "EcsApiMeshArn"
        }
       ]
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/redisVirtualService/Resource"
   }
  },
  "nodeE52CB09E": {
   "Type": "AWS::AppMesh::VirtualNode",
   "Properties": {
    "MeshName": {
     "Fn::Select": [
      1,
      {
       "Fn::Split": [
        "/",
        {
         "Fn::Select": [
          5,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::ImportValue": "EcsApiMeshArn"
            }
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "Spec": {
     "Backends": [
      {
       "VirtualService": {
        "VirtualServiceName": {
         "Fn::Join": [
          "",
          [
           "redis.",
           {
            "Fn::ImportValue": "ApiNamespaceName"
           }
          ]
         ]
        }
       }
      }
     ],
     "Listeners": [
      {
       "HealthCheck": {
        "HealthyThreshold": 3,
        "IntervalMillis": 35000,
        "Path": "/healthz",
        "Port": 5000,
        "Protocol": "http",
        "TimeoutMillis": 30000,
        "UnhealthyThreshold": 2
       },
       "PortMapping": {
        "Port": 5000,
        "Protocol": "http"
       },
       "Timeout": {
        "HTTP": {
         "Idle": {
          "Unit": "ms",
          "Value": 30000
         }
        }
       }
      }
     ],
     "Logging": {
      "AccessLog": {
       "File": {
        "Path": "/dev/stdout"
       }
      }
     },
     "ServiceDiscovery": {
      "DNS": {
       "Hostname": "skillsets.api.local"
      }
     }
    },
    "MeshOwner": {
     "Fn::Select": [
      4,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::ImportValue": "EcsApiMeshArn"
        }
       ]
      }
     ]
    },
    "VirtualNodeName": "skillsets-node"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/node/Resource"
   }
  },
  "skillsetsVirtualService07F40FB3": {
   "Type": "AWS::AppMesh::VirtualService",
   "Properties": {
    "MeshName": {
     "Fn::Select": [
      1,
      {
       "Fn::Split": [
        "/",
        {
         "Fn::Select": [
          5,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::ImportValue": "EcsApiMeshArn"
            }
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "Spec": {
     "Provider": {
      "VirtualNode": {
       "VirtualNodeName": {
        "Fn::GetAtt": [
         "nodeE52CB09E",
         "VirtualNodeName"
        ]
       }
      }
     }
    },
    "VirtualServiceName": {
     "Fn::Join": [
      "",
      [
       "skillsets.",
       {
        "Fn::ImportValue": "ApiNamespaceName"
       }
      ]
     ]
    },
    "MeshOwner": {
     "Fn::Select": [
      4,
      {
       "Fn::Split": [
        ":",
        {
         "Fn::ImportValue": "EcsApiMeshArn"
        }
       ]
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsetsVirtualService/Resource"
   }
  },
  "skillsetsTaskDef78421FED": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "DependsOn": [
       {
        "Condition": "HEALTHY",
        "ContainerName": "envoy"
       }
      ],
      "Environment": [
       {
        "Name": "REDIS_HOST",
        "Value": "localhost"
       },
       {
        "Name": "REDIS_PORT",
        "Value": "6379"
       }
      ],
      "Essential": true,
      "Image": "codesenju/skillsets",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "skillsetsLogGroup9C1E032F"
        },
        "awslogs-stream-prefix": "skillsets-container",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 512,
      "Name": "skillsets",
      "PortMappings": [
       {
        "ContainerPort": 5000,
        "HostPort": 5000,
        "Name": "skillsets",
        "Protocol": "tcp"
       }
      ]
     },
     {
      "Command": [
       "redis-server",
       "--save",
       "60",
       "1",
       "--loglevel",
       "debug"
      ],
      "Essential": true,
      "Image": "redis:7",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "skillsetsLogGroup9C1E032F"
        },
        "awslogs-stream-prefix": "redis-container",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 512,
      "MountPoints": [
       {
        "ContainerPath": "/data",
        "ReadOnly": false,
        "SourceVolume": "REDIS_DATA"
       }
      ],
      "Name": "redis",
      "PortMappings": [
       {
        "ContainerPort": 6379,
        "Name": "redis",
        "Protocol": "tcp"
       }
      ]
     },
     {
      "DependsOn": [
       {
        "Condition": "START",
        "ContainerName": "xray"
       }
      ],
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": "us-east-1"
       },
       {
        "Name": "ENVOY_LOG_LEVEL",
        "Value": "debug"
       },
       {
        "Name": "ENABLE_ENVOY_STATS_TAGS",
        "Value": "1"
       },
       {
        "Name": "ENABLE_ENVOY_XRAY_TRACING",
        "Value": "1"
       },
       {
        "Name": "APPMESH_RESOURCE_ARN",
        "Value": {
         "Ref": "nodeE52CB09E"
        }
       },
       {
        "Name": "APPMESH_METRIC_EXTENSION_VERSION",
        "Value": "1"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE"
       ],
       "Interval": 35,
       "Retries": 10,
       "Timeout": 30
      },
      "Image": "public.ecr.aws/appmesh/aws-appmesh-envoy:v1.15.1.0-prod",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "skillsetsLogGroup9C1E032F"
        },
        "awslogs-stream-prefix": "/envoy-container",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 256,
      "Name": "envoy",
      "Ulimits": [
       {
        "HardLimit": 1048576,
        "Name": "nofile",
        "SoftLimit": 524288
       }
      ],
      "User": "1337"
     },
     {
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": "us-east-1"
       }
      ],
      "Essential": true,
      "Image": "amazon/aws-xray-daemon",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "skillsetsLogGroup9C1E032F"
        },
        "awslogs-stream-prefix": "/xray-container",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 512,
      "Name": "xray",
      "User": "1337"
     },
     {
      "Command": [
       "--config=/etc/ecs/otel-config.yaml"
      ],
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": "us-east-1"
       },
       {
        "Name": "AWS_PROMETHEUS_ENDPOINT",
        "Value": "https://aps-workspaces.us-east-1.amazonaws.com/workspaces/ws-5f8b1530-3388-4177-82af-eae1c6d54d57/api/v1/remote_write"
       }
      ],
      "Essential": true,
      "Image": "codesenju/aws-otel-collector:case",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "skillsetsLogGroup9C1E032F"
        },
        "awslogs-stream-prefix": "/otel-container",
        "awslogs-region": "us-east-1"
       }
      },
      "MemoryReservation": 512,
      "Name": "otel"
     }
    ],
    "Cpu": "1024",
    "ExecutionRoleArn": "arn:aws:iam::587878432697:role/ecsTaskExecutionRole",
    "Family": "skillsetsStackskillsetsTaskDef14D7EB6B",
    "Memory": "3072",
    "NetworkMode": "awsvpc",
    "ProxyConfiguration": {
     "ContainerName": "envoy",
     "ProxyConfigurationProperties": [
      {
       "Name": "AppPorts",
       "Value": "5000"
      },
      {
       "Name": "ProxyEgressPort",
       "Value": "15001"
      },
      {
       "Name": "ProxyIngressPort",
       "Value": "15000"
      },
      {
       "Name": "EgressIgnoredIPs",
       "Value": "169.254.170.2,169.254.169.254"
      },
      {
       "Name": "IgnoredUID",
       "Value": "1337"
      }
     ],
     "Type": "APPMESH"
    },
    "RequiresCompatibilities": [
     "EC2",
     "FARGATE"
    ],
    "TaskRoleArn": "arn:aws:iam::587878432697:role/000A_ecsExecTaskRole",
    "Volumes": [
     {
      "EFSVolumeConfiguration": {
       "FilesystemId": {
        "Ref": "redisEFSFileSystemD702FC13"
       }
      },
      "Name": "REDIS_DATA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsetsTaskDef/Resource"
   }
  },
  "skillsetsLogGroup9C1E032F": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/ecs/api/skillsets",
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsetsLogGroup/Resource"
   }
  },
  "skillsetsService5665704E": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "FARGATE",
      "Weight": 1
     }
    ],
    "Cluster": "api",
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "EnableExecuteCommand": true,
    "HealthCheckGracePeriodSeconds": 5000,
    "LoadBalancers": [
     {
      "ContainerName": "skillsets",
      "ContainerPort": 5000,
      "TargetGroupArn": {
       "Ref": "skillsetsLoadBalancerskillsetsListenerskillsetsTargetsGroup3CA8A825"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "skillsetssg924C52BD",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       "subnet-01b1911df0ad91eb7",
       "subnet-02ae900ec00be7b2f",
       "subnet-08d2609ae2ad75bcc"
      ]
     }
    },
    "ServiceName": "skillsets",
    "TaskDefinition": {
     "Ref": "skillsetsTaskDef78421FED"
    }
   },
   "DependsOn": [
    "skillsetsLoadBalancerskillsetsListenerE6A06DED",
    "skillsetsLoadBalancerskillsetsListenerskillsetsTargetsGroup3CA8A825"
   ],
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsets/Service"
   }
  },
  "skillsetsTaskCountTarget0713437C": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 10,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/api/",
       {
        "Fn::GetAtt": [
         "skillsetsService5665704E",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::587878432697:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsets/TaskCount/Target/Resource"
   }
  },
  "skillsetsTaskCountTargetCpuScaling6B862B9B": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "skillsetsStackskillsetsTaskCountTargetCpuScaling83421AE5",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "skillsetsTaskCountTarget0713437C"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "TargetValue": 80
    }
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsets/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "skillsetsTaskCountTargetMemoryScaling824089DE": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "skillsetsStackskillsetsTaskCountTargetMemoryScalingB5E3AA87",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "skillsetsTaskCountTarget0713437C"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageMemoryUtilization"
     },
     "TargetValue": 80
    }
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsets/TaskCount/Target/MemoryScaling/Resource"
   }
  },
  "skillsetsLoadBalancer17BA0E06": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::ImportValue": "elbSGID"
     }
    ],
    "Subnets": [
     "subnet-0a6cb385222142b7f",
     "subnet-04b96da3213c9da46",
     "subnet-02d97f91df8f209b0"
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsetsLoadBalancer/Resource"
   }
  },
  "skillsetsLoadBalancerskillsetsListenerE6A06DED": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "skillsetsLoadBalancerskillsetsListenerskillsetsTargetsGroup3CA8A825"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "skillsetsLoadBalancer17BA0E06"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsetsLoadBalancer/skillsetsListener/Resource"
   }
  },
  "skillsetsLoadBalancerskillsetsListenerskillsetsTargetsGroup3CA8A825": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckPath": "/healthz",
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": "vpc-0f168d381ce65cfb5"
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/skillsetsLoadBalancer/skillsetsListener/skillsetsTargetsGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31SbU/CMBD+LXwvFTH8AEUxJqiEEb+aUm7jpGuXvmCWZf/d68agaGKypHfPc2/P3aZ8NuOTkfh2Y7k7jBVueZN5IQ9sDc4EK4ER99mAnBIBMlj09bM1oWLzXP8PvOjCgnN/8KcObhmKkjcro1DWMaa3Wga5480CFWS181BG6tp7NUH7jbAF+JaJqirB7XnzgdYHod7MDmJQ6p7sDOwRZcqeEOopqedGuMMj5KjRo9Ex7DditBeowSbYguYQHpLag5lJocRWQSwyjyO3TJmC+ixNcV7YYHdCSL+IRUXwxlE26oKWfi4TBXcNrpH+2Vg6GiVkfd5lrVcAKVXCeZTKiN2WymhJ3JFue39pvyTuoePA9jMmfhqHdBF9ihnshO8HO0tN3LaNwHvwVegUDf9ay1a13xt9c8dvJ/SNvhzi2NLusAS+7t8fyo6FgLMCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "skillsetsStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "SkillsetsElbEndpoint": {
   "Value": {
    "Fn::GetAtt": [
     "skillsetsLoadBalancer17BA0E06",
     "DNSName"
    ]
   },
   "Export": {
    "Name": "SkillsetsElbEndpoint"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}